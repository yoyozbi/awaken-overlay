name: Docker Image CI

on:
  push:
    branches: ['main']
    paths:
      - "apps/awaken-overlay/**/*"
      - "packages/**/*"
      - ".github/workflows/**/*"
      - "pnpm-*.yaml"
      - "package.json"
      - "turbo.json"
  pull_request:
    paths:
      - "apps/awaken-overlay/**/*"
      - "packages/**/*"
      - ".github/workflows/**/*"
      - "pnpm-*.yaml"
      - "package.json"
      - "turbo.json"


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/awaken-overlay

jobs:
  deploy-awaken-image:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: apps/awaken-overlay/Dockerfile
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          push: true


      - name:  redeploy on cluster
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.API_URL }}
          method: 'POST'
          bearerToken: ${{ secrets.API_KEY }}
  test-awaken-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3


      - name: Build  Docker image
        uses: docker/build-push-action@v5
        with:
          file: apps/awaken-overlay/Dockerfile
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

